name: Build staging/main app

on:
  push:
    branches:      
      - staging

jobs:
  build_and_release:
    name: Build Docker image and release to Heroku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set app name from PR
        run: |
          echo "APP_NAME=kyso-api-${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Add env vars to app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          KYSO_FILES_CLOUDFRONT_URL: ${{ secrets.KYSO_FILES_CLOUDFRONT_URL }}
          DATABASE_URI: ${{ secrets.DATABASE_URI }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PARSE_MASTER_KEY: ${{ secrets.PARSE_MASTER_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          TEAM_PLAN_MONTHLY: ${{ secrets.TEAM_PLAN_MONTHLY }}
          FREE_TEAM_PLAN_MONTHLY: ${{ secrets.FREE_TEAM_PLAN_MONTHLY }}
          BETA_STRIPE_SECRET_KEY: ${{ secrets.BETA_STRIPE_SECRET_KEY }}
          BETA_FREE_TEAM_PLAN_MONTHLY: ${{ secrets.BETA_FREE_TEAM_PLAN_MONTHLY }}
          AUTH_GITHUB_CLIENT_ID: ${{ secrets.AUTH_GITHUB_CLIENT_ID }}
          AUTH_GITHUB_CLIENT_SECRET: ${{ secrets.AUTH_GITHUB_CLIENT_SECRET }}
          OAUTH_USER_PASSWORD: ${{ secrets.OAUTH_USER_PASSWORD }}
          MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
          MAILGUN_EMAIL_DOMAIN: ${{ secrets.MAILGUN_EMAIL_DOMAIN }}

        run: |
          heroku config:set NODE_ENV=$NODE_ENV -a $APP_NAME
          heroku config:set KYSO_FILES_CLOUDFRONT_URL=$KYSO_FILES_CLOUDFRONT_URL -a $APP_NAME
          # heroku config:set DATABASE_URI=$DATABASE_URI -a $APP_NAME
          heroku config:set AWS_REGION=$AWS_REGION -a $APP_NAME
          heroku config:set AWS_S3_BUCKET=$AWS_S3_BUCKET -a $APP_NAME
          heroku config:set AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -a $APP_NAME
          heroku config:set AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -a $APP_NAME
          heroku config:set PARSE_MASTER_KEY=$PARSE_MASTER_KEY -a $APP_NAME
          heroku config:set STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY -a $APP_NAME
          heroku config:set TEAM_PLAN_MONTHLY=$TEAM_PLAN_MONTHLY -a $APP_NAME
          heroku config:set FREE_TEAM_PLAN_MONTHLY=$FREE_TEAM_PLAN_MONTHLY -a $APP_NAME
          heroku config:set AUTH_GITHUB_CLIENT_ID=$AUTH_GITHUB_CLIENT_ID -a $APP_NAME
          heroku config:set AUTH_GITHUB_CLIENT_SECRET=$AUTH_GITHUB_CLIENT_SECRET -a $APP_NAME
          heroku config:set OAUTH_USER_PASSWORD=$OAUTH_USER_PASSWORD -a $APP_NAME
          heroku config:set MAILGUN_API_KEY=$MAILGUN_API_KEY -a $APP_NAME
          heroku config:set MAILGUN_EMAIL_DOMAIN=$MAILGUN_EMAIL_DOMAIN -a $APP_NAME

      - name: Build and push the Docker image to the Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          DOCKER_BUILDKIT: 1
        run: |
          echo $HEROKU_API_KEY | docker login --username=_ --password-stdin registry.heroku.com
          docker build -f Dockerfile --cache-from registry.heroku.com/$APP_NAME/web -t registry.heroku.com/$APP_NAME/web .
          docker build -f Dockerfile --cache-from registry.heroku.com/$APP_NAME/worker -t registry.heroku.com/$APP_NAME/worker .
          docker push registry.heroku.com/$APP_NAME/web:latest
          docker push registry.heroku.com/$APP_NAME/worker:latest

      - name: Release image on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login
          heroku container:release -a $APP_NAME web
          heroku container:release -a $APP_NAME worker
