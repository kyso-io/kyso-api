{
  "openapi": "3.0.0",
  "paths": {
    "/v1/user": {
      "get": {
        "operationId": "UserController_getAuthenticatedUser",
        "summary": "Get the authenticated user",
        "description": "Allows fetching content of the authenticated user",
        "parameters": [
          {
            "name": "authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authenticated user data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/users": {
      "get": {
        "operationId": "UsersController_getUsers",
        "summary": "Search and fetch users",
        "description": "By passing the appropiate parameters you can fetch and filter the users of the platform.\n            **This endpoint supports filtering**. Refer to the User schema to see available options.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Allows skipping some elements for pagination purposes",
            "schema": {
              "minimum": 1,
              "exclusiveMaximum": true,
              "exclusiveMinimum": true,
              "title": "Page",
              "format": "int32",
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "Limits the amount of reports returned by the request",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "exclusiveMaximum": true,
              "exclusiveMinimum": true,
              "title": "Items per page",
              "format": "int32",
              "default": 30,
              "type": "number"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Specify which fields of the reports will be returned",
            "schema": {
              "title": "Fields",
              "format": "string",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Decide how the returned reports are sorted",
            "schema": {
              "title": "Sort by",
              "format": "string",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "UsersController_createUser",
        "summary": "Creates an user",
        "description": "If requester has UserPermissionsEnum.CREATE permission, creates an user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User creation gone well",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/users/{userName}": {
      "get": {
        "operationId": "UsersController_getUser",
        "summary": "Get an user",
        "description": "Allows fetching content of a specific user passing its name",
        "parameters": [
          {
            "name": "userName",
            "required": true,
            "in": "path",
            "description": "Name of the user to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User matching name",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/users/{email}": {
      "patch": {
        "operationId": "UsersController_updateUserData",
        "summary": "Update an user",
        "description": "Allows updating an user passing its name",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "description": "Email of the user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authenticated user data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/users/{mail}": {
      "delete": {
        "operationId": "UsersController_deleteUser",
        "summary": "Deletes an user",
        "description": "Allows deleting a specific user passing its email",
        "parameters": [
          {
            "name": "mail",
            "required": true,
            "in": "path",
            "description": "Name of the user to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletion done successfully"
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/users/{email}/accounts": {
      "patch": {
        "operationId": "UsersController_addAccount",
        "summary": "Add an account to an user",
        "description": "Allows adding an account to an user passing its username",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "description": "Email of the user to add an account",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account added successfully"
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/users/{email}/accounts/{provider}/{accountId}": {
      "delete": {
        "operationId": "UsersController_removeAccount",
        "summary": "Remove an account from an user",
        "description": "Allows removing an account from an user passing its username",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "description": "Email of the user to remove an account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "description": "Provider of the account to remove",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "description": "Id of the account to remove",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account removed successfully"
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Logs an user into Kyso",
        "description": "Allows existing users to log-in into Kyso",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT token related to user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/v1/auth/sign-up": {
      "post": {
        "operationId": "AuthController_signUp",
        "summary": "Signs up an user into Kyso",
        "description": "Allows new users to sign-up into Kyso",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registered user",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/v1/repos/bitbucket": {
      "get": {
        "operationId": "BitbucketReposController_getRepos",
        "summary": "By passing in the appropriate options, you can search for available repositories in the linked git provider account",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repository"
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "repos/bitbucket"
        ]
      }
    },
    "/v1/repos/bitbucket/{repoOwner}/{repoName}": {
      "get": {
        "operationId": "BitbucketReposController_getRepo",
        "summary": "Fetch data for a repository, after specifying the owner and the name of the repository",
        "parameters": [
          {
            "name": "repoOwner",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repoName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the specified repository",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repository"
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "repos/bitbucket"
        ]
      }
    },
    "/v1/repos/bitbucket/{repoOwner}/{repoName}/{branch}/tree": {
      "get": {
        "operationId": "BitbucketReposController_getRepoTree",
        "summary": "Get the tree of a specific repository",
        "parameters": [
          {
            "name": "repoOwner",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repoName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the specified repository",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repository"
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "repos/bitbucket"
        ]
      }
    },
    "/v1/repos/bitbucket/user": {
      "get": {
        "operationId": "BitbucketReposController_getAuthenticatedUser",
        "summary": "Get data about the git provider account that was linked with the requesting user account.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The data of the specified repository"
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "repos/bitbucket"
        ]
      }
    },
    "/v1/repos/github": {
      "get": {
        "operationId": "GithubReposController_getRepos",
        "summary": "Get and search repositories",
        "description": "By passing in the appropriate options, you can search for available repositories in the linked git provider account",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Repository"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "repos/github"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/repos/github/{repoOwner}/{repoName}": {
      "get": {
        "operationId": "GithubReposController_getRepo",
        "summary": "Get a single repository",
        "description": "Fetch data for a repository, after specifying the owner and the name of the repository",
        "parameters": [
          {
            "name": "repoOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the repository to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repoName",
            "required": true,
            "in": "path",
            "description": "Name of the repository to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the specified repository",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Repository"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "repos/github"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/repos/github/{repoOwner}/{repoName}/{branch}/tree": {
      "get": {
        "operationId": "GithubReposController_getRepoTree",
        "summary": "Explore a repository tree",
        "description": "Get the tree of a specific repository",
        "parameters": [
          {
            "name": "repoOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the repository to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repoName",
            "required": true,
            "in": "path",
            "description": "Name of the repository to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "required": true,
            "in": "path",
            "description": "Branch to fetch content from. Accepts slashes.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the specified repository",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Repository"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "repos/github"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/repos/github/user": {
      "get": {
        "operationId": "GithubReposController_getAuthenticatedUser",
        "summary": "Get git logged user info",
        "description": "Get data about the git provider account that was linked with the requesting user account.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The data of the specified repository",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GithubAccount"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "repos/github"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/repos/github/user/access_token/{accessToken}": {
      "get": {
        "operationId": "GithubReposController_getUserByAccessToken",
        "summary": "Get git user info by access token",
        "description": "Get data about the git provider account that belongs to the provided access token",
        "parameters": [
          {
            "name": "accessToken",
            "required": true,
            "in": "path",
            "description": "Github's access token related to the user you want to fetch data",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the specified repository",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GithubAccount"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "repos/github"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/repos/github/user/email/access_token/{accessToken}": {
      "get": {
        "operationId": "GithubReposController_getUserEmailByAccessToken",
        "summary": "Get email user info by access token",
        "description": "Get email data about the git provider account that belongs to the provided access token",
        "parameters": [
          {
            "name": "accessToken",
            "required": true,
            "in": "path",
            "description": "Github's access token related to the user you want to fetch email data",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data of the specified repository",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GithubAccount"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "repos/github"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/organizations/{organizationName}": {
      "get": {
        "operationId": "OrganizationsController_getOrganization",
        "summary": "Get an organization",
        "description": "Allows fetching content of a specific organization passing its name",
        "parameters": [
          {
            "name": "organizationName",
            "required": true,
            "in": "path",
            "description": "Name of the organization to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization matching name",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "OrganizationsController_updateOrganization",
        "summary": "Update an organization",
        "description": "By passing the appropiate parameters you can update an organization",
        "parameters": [
          {
            "name": "organizationName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated organization",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/organizations/{organizationName}/members": {
      "get": {
        "operationId": "OrganizationsController_getOrganizationMembers",
        "summary": "Get all the members of an organization",
        "description": "Allows fetching content of a specific organization passing its name",
        "parameters": [
          {
            "name": "organizationName",
            "required": true,
            "in": "path",
            "description": "Name of the organization to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization matching name",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "OrganizationsController_updateOrganizationMembers",
        "summary": "Update the members of an organization",
        "description": "By passing the appropiate parameters you can update the members of an organization",
        "parameters": [
          {
            "name": "organizationName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationMembers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated organization",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OrganizationMember"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/organizations": {
      "post": {
        "operationId": "OrganizationsController_createOrganization",
        "summary": "Create a new organization",
        "description": "By passing the appropiate parameters you can create a new organization",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created organization",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/organizations/{organizationName}/members/{memberId}/{role}": {
      "delete": {
        "operationId": "OrganizationsController_removeOrganizationMember",
        "summary": "remove a user's role in an organization",
        "description": "By passing the appropiate parameters you can remove a user's role in an organization",
        "parameters": [
          {
            "name": "organizationName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated organization",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OrganizationMember"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "organizations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/reports": {
      "get": {
        "operationId": "ReportsController_getReports",
        "summary": "Search and fetch reports",
        "description": "By passing the appropiate parameters you can fetch and filter the reports available to the authenticated user.<br />\n         **This endpoint supports filtering**. Refer to the Report schema to see available options.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Allows skipping some elements for pagination purposes",
            "schema": {
              "minimum": 1,
              "exclusiveMaximum": true,
              "exclusiveMinimum": true,
              "title": "Page",
              "format": "int32",
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "Limits the amount of reports returned by the request",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "exclusiveMaximum": true,
              "exclusiveMinimum": true,
              "title": "Items per page",
              "format": "int32",
              "default": 30,
              "type": "number"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Specify which fields of the reports will be returned",
            "schema": {
              "title": "Fields",
              "format": "string",
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Decide how the returned reports are sorted",
            "schema": {
              "title": "Sort by",
              "format": "string",
              "type": "string"
            }
          },
          {
            "name": "owner",
            "required": false,
            "in": "query",
            "description": "Return only reports belonging to the specified owner. Can be a user or a team",
            "schema": {
              "title": "Filter by owner",
              "format": "string",
              "type": "string"
            }
          },
          {
            "name": "pinned",
            "required": false,
            "in": "query",
            "description": "Return only reports that are pinned",
            "schema": {
              "title": "Filter by pinned",
              "format": "boolean",
              "type": "boolean"
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "description": "Return only reports that has at least one the tags provided",
            "schema": {
              "title": "Filter by comma separated tags",
              "format": "string",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reports matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Report"
                      }
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "ReportsController_createReport",
        "summary": "Create a new report",
        "description": "By passing the appropiate parameters you can create a new report referencing a git repository",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Pass an array to create multiple objects",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created report object if passed a single Report, or an array of report creation status if passed an array of reports to create (see schemas)",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Report"
                    },
                    {
                      "$ref": "#/components/schemas/BatchReportCreation"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/reports/{reportOwner}/{reportName}": {
      "get": {
        "operationId": "ReportsController_getReport",
        "summary": "Get a report",
        "description": "Allows fetching content of a specific report passing its full name",
        "parameters": [
          {
            "name": "reportName",
            "required": true,
            "in": "path",
            "description": "Name of the report to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the report to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report matching id",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Report"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "ReportsController_updateReport",
        "summary": "Update the specific report",
        "description": "Allows updating content from the specified report",
        "parameters": [
          {
            "name": "reportName",
            "required": true,
            "in": "path",
            "description": "Name of the report to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the report to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Specified report data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Report"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ReportsController_deleteReport",
        "summary": "Delete a report",
        "description": "Allows deleting a specific report",
        "parameters": [
          {
            "name": "reportName",
            "required": true,
            "in": "path",
            "description": "Name of the report to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the report to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Report deleted"
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/reports/{reportOwner}/pinned": {
      "get": {
        "operationId": "ReportsController_getPinnedReportsForAnUser",
        "summary": "Get pinned reports for an user",
        "description": "Allows fetching pinned reports of a specific user passing its full name",
        "parameters": [
          {
            "name": "reportOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the report to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All the pinned reports of an user",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Report"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/reports/{reportOwner}/{reportName}/pin": {
      "post": {
        "operationId": "ReportsController_pinReport",
        "summary": "Toggles the pin of the specified report",
        "description": "Allows pinning of the specified report, unpins any other pinned report for owner",
        "parameters": [
          {
            "name": "reportName",
            "required": true,
            "in": "path",
            "description": "Name of the report to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the report to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Specified report data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Report"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/reports/{reportOwner}/{reportName}/comments": {
      "get": {
        "operationId": "ReportsController_getComments",
        "summary": "Get comments of a report",
        "description": "By passing in the appropriate options you can see all the comments of a report",
        "parameters": [
          {
            "name": "reportName",
            "required": true,
            "in": "path",
            "description": "Name of the report to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the report to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comments of the specified report",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/reports/{reportOwner}/{reportName}/branches": {
      "get": {
        "operationId": "ReportsController_getBranches",
        "summary": "Get branches of a report",
        "description": "By passing in the appropriate options you can see all the branches of a report",
        "parameters": [
          {
            "name": "reportName",
            "required": true,
            "in": "path",
            "description": "Name of the report to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the report to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Branches of the specified report",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Branch"
                      }
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/reports/{reportOwner}/{reportName}/{branch}/commits": {
      "get": {
        "operationId": "ReportsController_getCommits",
        "summary": "Get commits of a report imported from a git provider",
        "description": "By passing in the appropriate options you can see the commits of a branch for the repository the specified report is linked to",
        "parameters": [
          {
            "name": "branch",
            "required": true,
            "in": "path",
            "description": "Branch to start listing commits from. Accepts slashes",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportName",
            "required": true,
            "in": "path",
            "description": "Name of the report to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the report to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Commits of the specified report branch",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Branch"
                      }
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/reports/{reportOwner}/{reportName}/{branch}/tree/{filePath}": {
      "get": {
        "operationId": "ReportsController_getReportFileHash",
        "summary": "Explore a report tree",
        "description": "Get hash of a file for a given report. If the file is a folder, will get information about the files in it too (non-recursively). Path is currently ignored for local reports.",
        "parameters": [
          {
            "name": "filePath",
            "required": true,
            "in": "path",
            "description": "Path of the file to be consulted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "required": true,
            "in": "path",
            "description": "Branch of the repository to fetch data from. Accepts slashes.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportName",
            "required": true,
            "in": "path",
            "description": "Name of the report to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the report to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content of the requested file",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/String"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/reports/{reportOwner}/{reportName}/file/{hash}": {
      "get": {
        "operationId": "ReportsController_getReportFileContent",
        "summary": "Get content of a file",
        "description": "By passing the hash of a file, get its raw content directly from the source.",
        "parameters": [
          {
            "name": "hash",
            "required": true,
            "in": "path",
            "description": "Hash of the file to access",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportName",
            "required": true,
            "in": "path",
            "description": "Name of the report to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportOwner",
            "required": true,
            "in": "path",
            "description": "Name of the owner of the report to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content of the requested file",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/String"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/teams": {
      "get": {
        "operationId": "TeamsController_getVisibilityTeams",
        "summary": "Get all team's in which user has visibility",
        "description": "Allows fetching content of all the teams that the user has visibility",
        "parameters": [
          {
            "name": "x-kyso-organization",
            "in": "header",
            "description": "Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team matching name",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "teams"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "TeamsController_createTeam",
        "summary": "Create a new team",
        "description": "Allows creating a new team",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created team data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "teams"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/teams/{teamName}": {
      "get": {
        "operationId": "TeamsController_getTeam",
        "summary": "Get a team",
        "description": "Allows fetching content of a specific team passing its name",
        "parameters": [
          {
            "name": "teamName",
            "required": true,
            "in": "path",
            "description": "Name of the team to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-kyso-team",
            "required": true,
            "in": "header",
            "description": "Name of the team",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team matching name",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "teams"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "TeamsController_updateTeam",
        "summary": "Update the specified team",
        "description": "Allows updating content from the specified team",
        "parameters": [
          {
            "name": "teamName",
            "required": true,
            "in": "path",
            "description": "Name of the team to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-kyso-team",
            "required": true,
            "in": "header",
            "description": "Name of the team",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeamRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Specified team data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "teams"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/teams/{teamName}/members": {
      "get": {
        "operationId": "TeamsController_getTeamMembers",
        "summary": "Get the member's team",
        "description": "Allows fetching content of a specific team passing its name",
        "parameters": [
          {
            "name": "teamName",
            "required": true,
            "in": "path",
            "description": "Name of the team to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-kyso-team",
            "required": true,
            "in": "header",
            "description": "Name of the team",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team matching name",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "teams"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/teams/{teamName}/reports": {
      "get": {
        "operationId": "TeamsController_getReportsOfTeam",
        "summary": "Get the reports of the specified team",
        "description": "Allows fetching content of a specific team passing its name",
        "parameters": [
          {
            "name": "teamName",
            "required": true,
            "in": "path",
            "description": "Name of the team to fetch",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-kyso-team",
            "required": true,
            "in": "header",
            "description": "Name of the team",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team matching name",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Report"
                    },
                    "relations": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Report"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Team"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Organization"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input is not correct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authenticated to execute this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource you are trying to acces can't be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "teams"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Kyso's API",
    "description": "Spec for Kyso's API",
    "version": "v1",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {}
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "Hateoas": {
        "type": "object",
        "properties": {
          "self_api": {
            "type": "string"
          },
          "self_ui": {
            "type": "string"
          }
        },
        "required": [
          "self_api",
          "self_ui"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "faker: datatype.uuid"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/Hateoas"
              }
            ]
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "enum": [
              "kyso",
              "google",
              "github"
            ]
          },
          "bio": {
            "type": "string",
            "maxLength": 500
          },
          "plan": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string"
          },
          "email_verified": {
            "type": "boolean"
          },
          "global_permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hashed_password": {
            "type": "string"
          },
          "accessToken": {
            "type": "string",
            "description": "OAUTH2 token from OAUTH login providers"
          },
          "_email_verify_token": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "created_at",
          "updated_at",
          "links",
          "email",
          "username",
          "nickname",
          "provider",
          "bio",
          "plan",
          "avatar_url",
          "email_verified",
          "global_permissions",
          "hashed_password",
          "accessToken",
          "_email_verify_token"
        ]
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "faker: datatype.uuid"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/Hateoas"
              }
            ]
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "enum": [
              "kyso",
              "google",
              "github"
            ]
          },
          "bio": {
            "type": "string",
            "maxLength": 500
          },
          "plan": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string"
          },
          "email_verified": {
            "type": "boolean"
          },
          "global_permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "created_at",
          "updated_at",
          "links",
          "email",
          "username",
          "nickname",
          "provider",
          "bio",
          "plan",
          "avatar_url",
          "email_verified",
          "global_permissions",
          "password"
        ]
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          }
        },
        "required": [
          "nickname",
          "bio",
          "accessToken"
        ]
      },
      "UserAccount": {
        "type": "object",
        "properties": {}
      },
      "Login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username to login. Only required in kyso provider. This field is ignored in the rest\n                      of providers"
          },
          "password": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "description": "Authentication provider in which the user wants to rely. See schema for details",
            "enum": [
              "kyso",
              "google",
              "github"
            ]
          }
        },
        "required": [
          "password",
          "provider"
        ]
      },
      "Repository": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "default_branch": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_private": {
            "type": "boolean"
          },
          "language": {
            "type": "string"
          },
          "pushed_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "name",
          "full_name",
          "default_branch",
          "description",
          "is_private",
          "language",
          "pushed_at"
        ]
      },
      "GithubAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "login": {
            "type": "string"
          },
          "orgs": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "login",
          "orgs"
        ]
      },
      "KysoRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Role identificator"
          },
          "name": {
            "type": "string",
            "description": "Role name"
          },
          "permissions": {
            "description": "List of permissions related to this role. See permission reference for more details",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "permissions"
        ]
      },
      "Organization": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "faker: datatype.uuid"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/Hateoas"
              }
            ]
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KysoRole"
            }
          },
          "billingEmail": {
            "type": "string",
            "description": "Mail where the billing communications will go"
          },
          "subscriptionId": {
            "type": "string",
            "description": "Stripe identificator for payments"
          },
          "allowGoogleLogin": {
            "type": "boolean",
            "description": "Flag to allow or deny login into the organization using google accounts. True allows google login, false deny it",
            "default": true
          }
        },
        "required": [
          "type",
          "id",
          "created_at",
          "updated_at",
          "links",
          "roles",
          "billingEmail",
          "subscriptionId",
          "allowGoogleLogin"
        ]
      },
      "UpdateOrganizationMembers": {
        "type": "object",
        "properties": {}
      },
      "BatchReportCreation": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "reason": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "Report": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "faker: datatype.uuid"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/Hateoas"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "views": {
            "type": "number"
          },
          "stars": {
            "type": "number"
          },
          "number_of_comments": {
            "type": "number"
          },
          "analytics": {
            "type": "object"
          },
          "provider": {
            "type": "object"
          },
          "source": {
            "type": "object"
          },
          "pin": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "request_private": {
            "type": "boolean"
          },
          "user_id": {
            "type": "string",
            "format": "faker: datatype.uuid"
          },
          "comment_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "faker: datatype.uuid"
            }
          },
          "team_id": {
            "type": "string",
            "format": "faker: datatype.uuid"
          }
        },
        "required": [
          "type",
          "id",
          "created_at",
          "updated_at",
          "links",
          "name",
          "views",
          "stars",
          "number_of_comments",
          "analytics",
          "provider",
          "source",
          "pin",
          "tags",
          "description",
          "request_private",
          "user_id",
          "comment_ids",
          "team_id"
        ]
      },
      "NormalizedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "description": "The specific data that has been requested, it is an array or object",
            "example": "a report, or list of reports",
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "$ref": "#/components/schemas/Report"
              },
              {
                "$ref": "#/components/schemas/Comment"
              },
              {
                "$ref": "#/components/schemas/Team"
              },
              {
                "$ref": "#/components/schemas/Organization"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Report"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Comment"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            ]
          },
          "relations": {
            "description": "object with all the fetched relations",
            "anyOf": [
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/User"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Report"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Comment"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Team"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            ]
          }
        },
        "required": [
          "data",
          "relations"
        ]
      },
      "CreateReport": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "Git provider to retrieve the code",
            "enum": [
              "github",
              "gitlab",
              "bitbucket"
            ]
          },
          "owner": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "default_branch": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "owner",
          "name",
          "default_branch",
          "team_id"
        ]
      },
      "CreateReportRequest": {
        "type": "object",
        "properties": {
          "teams": {
            "type": "string"
          },
          "reports": {
            "$ref": "#/components/schemas/CreateReport"
          }
        },
        "required": [
          "reports"
        ]
      },
      "UpdateReportRequest": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "faker: datatype.uuid"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/Hateoas"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KysoRole"
            }
          },
          "visibility": {
            "type": "string",
            "enum": [
              "public",
              "protected",
              "private"
            ]
          },
          "organization_id": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "created_at",
          "updated_at",
          "links",
          "name",
          "avatar_url",
          "bio",
          "link",
          "location",
          "roles",
          "visibility",
          "organization_id"
        ]
      },
      "UpdateTeamRequest": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          }
        },
        "required": [
          "location",
          "link",
          "bio"
        ]
      }
    }
  }
}